class Solution {
    Map<Integer,Integer>map=new HashMap<>();
    public int[] findRightInterval(int[][] arr) {
        int []res=new int[arr.length];
        for(int i=0;i<arr.length;i++){
            map.put(arr[i][0],i);
            res[i]=arr[i][0];
        }
        Arrays.sort(res);
        int []total=new int[arr.length];
        for(int i=0;i<arr.length;i++){
            int val=path(arr[i][1],res);
            total[i]=val;
        }
        return total;
    }
    public int path(int target,int []res){
        int low=0;
        int high=res.length-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(res[mid]==target){
                return map.get(res[mid]);
            }
            else if(target>res[mid]){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return low>=res.length?-1:map.get(res[low]);
    }
}
