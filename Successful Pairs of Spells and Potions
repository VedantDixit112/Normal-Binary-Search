class Solution {
    public int[] successfulPairs(int[] arr1, int[] arr2, long succ) {
        Arrays.sort(arr2);
        int []res=new int[arr1.length];
        for(int i=0;i<arr1.length;i++){
            long t=succ%(long)arr1[i]==0?succ/(long)arr1[i]:(succ/(long)arr1[i])+1;
            int l=path(arr2,t);
            if(l==-1){
                res[i]=0;
            }
            else{
                res[i]=(arr2.length-l);
            }
        }
        return res;
    }
    public int path(int []arr,long target){
        int low=0;
        int high=arr.length-1;
        int ans=-2;
        while(low<=high){
            int mid=(low+(high-low)/2);
            if(arr[mid]==target){
                ans=mid;
                high=mid-1;
            }
            else if(target>arr[mid]){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return ans!=-2?ans:low>=arr.length?-1:low;
    }
}
